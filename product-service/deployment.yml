kind: Service
apiVersion: v1
metadata:
  name: product-service
spec:
  selector:
    app: productse
  ports:
    - protocol: "TCP"
      # Port accessible inside cluster
      port: 8080
      # Port to forward to inside the pod
      targetPort: 8080
      nodePort: 30033
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productse
  template:
    metadata:
      labels:
        app: productse
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: 'actuator/prometheus'
    spec:
      initContainers:
      - name: wait-for-mongo-service
        image: curlimages/curl:7.78.0
        command: ["/bin/sh","-c"]
        args: ["while [ $(curl -sw '%{http_code}' http://mongo-service.default.svc:27017 -o /dev/null --max-time 3) -ne 200 ]; do sleep 1; echo 'Waiting for the webserver...'; done"]
      - name: wait-for-config-service
        image: curlimages/curl:7.78.0
        command: ["/bin/sh","-c"]
        args: ["while [ $(curl -sw '%{http_code}' http://config-service.default.svc:8080/info -o /dev/null --max-time 3) -ne 200 ]; do sleep 1; echo 'Waiting for the webserver...'; done"]
      containers:
        - name: productse
          image: scaredste/product-service:v16.0.4
        #  resources:
         #   limits:
          #    cpu: "1"
           # requests:
            #  cpu: 200m
          readinessProbe:
            httpGet:
              path: /info
              port: 8080
            initialDelaySeconds: 5
          ports:
          - containerPort: 8080
            protocol: TCP
